--카페에서 scott_table을 다운바다 naver0314에 넣은 후
--cmd 창에서 naver0314 폴더로 이동후(cd naver0314)
--sqlplus로 scott 계정으로 접속후
--@scott_table 엔터
--자동으로 안에 있는 sql명령어가 실행됩니다
select * from tab; --생성된 테이블 확인
select * from emp; --emp테이블의 연습용 데이타 확인 
commit; --추가된 데이타 커밋, 커밋 안할시 추가된 데이타가 취소됨

--emp 테이블의 구조 확인
desc emp;

--전체 컬럼으로 emp 테이블 조회
select * from emp;--*전체컬럼
--ename, job 조회하고 싶어?
select ename,job from emp;

--ename, job컬럼만 조회, ename의 오름차순(asc) 또는 내림차순으로 조회(Desc)
select ename,job from emp order by ename asc;--asc인경우 생략가능, 오름차순 출력
select ename,job from emp order by ename desc;--내림차순 정렬

--job을 조회
select job from emp;

--job을 조회하는데 같은 직업은 한 ㄱ번만
select distinct job from emp;
select distinct job from emp order by job asc;
select distinct job from emp order by 1; --결과가 위와 같다, 1번부터

--ename이 smith인 사람 조회
select * from emp where Ename='SMITH'; // 대문자만 된다.
select * from emp where Ename='SMITH' OR Ename='WARD';

--Ename,sal을 조회
select Ename, sal from emp;

--칼럼제목을 변경
select Ename "사원명",sal "급여" from emp; --제목 변경시 공백이 포함되어 있을 경우 반드시 ""로 묶어준다

--여러 칼럼을 합해서 하나의 컬럼으로 출력할 경우
select '내 이름은 '||ENAME||'이고 '||job||'입니다' from emp;
select '내 이름은 '||ENAME||'이고 직업은 '||job||'입니다' "사원" from emp;

select ename||'님의 연봉은 '||sal||'입니다.' 연봉 from emp where ename='SMITH';

--sal이 2000-3000 조회
select Ename, sal from emp where sal>=2000 and sal<=3000; --조건은 where 뒤에
select Ename "이름", sal "연봉" from emp where sal between 1000 and 3000;

--직업이 sales맨,매니저, 클럭 조회
select Ename, job from emp where job='SALESMAN' or job='MANAGER' or job='CLERK';
select Ename, job from emp where job IN('SALESMAN','MANAGER','CLERK');

--MGR이 7902,7839,7788 조회(컬럼은 이름 직업 MGR)
select Ename, job, mgr from emp where mgr in(7902,7839,7788);

--MGR이 null인경우만 출력
select * from emp where mgr is null;

--comm이 not null인경우
select * from emp where comm is not null;

--문자조회시 %,_를 이용해서 조회
--ename이 a로 시작하는 사람 조회
select ename, sal from emp where ename like 'A%';

select ename, sal from emp where ename like '%N';

--이름의 두번째 글자가 A인 사람 조회
select ename from emp where ename like '_A%';

--이름이 S나 M으로 시작
select ename,sal from emp where ename like 'S%' or ename like 'M%';

--이름이 S로 시작하는 사람 중에 연봉이 2000이상인 사람
select ename,sal from emp where ename like 'S%' and sal>=2000;

--mgr이 7902,7788,7566이 아닌 사람을 조회
select ename,mgr from emp where mgr not In(7902,7788,7566);

--comm,comm+1000의 결과 출력
select comm,comm+1000 from emp; --null인경우 결과도 null로 나와요

--함수중 nvl(컬럼명,널일경우초기값), mysql은 ifnull이다
select nvl(comm,0),nvl(comm,0)+1000 from emp;

--위의 sql문을 컬럼제목을 추가하여 완성하시오
select nvl(comm,0) "comm",nvl(comm,0)+1000 "comm2" from emp;

--sal이 2000에서 3000이 아닌 경우 조회, 두가지 방법으로 해보기
select ename,sal from emp where sal<2000 or sal>3000;
select ename,sal from emp where sal not between 2000 and 3000;

--Group함수 count max min avg sum
select count(*) from emp; --전체인원수
select max(sal) from emp;--최고연봉
select min(sal) from emp;--최소연봉
select avg(sal) from emp;--평균연봉
select sum(sal) from emp;--돈합계

--avg는 소수점 이하가 많이 나와서 Round,ceil,floor 같이 사용한다.
select Round(avg(sal),2) from emp;
select CEil(avg(sal)) from emp; --무조건 올림
select floor(avg(sal)) from emp; -- 무조건 내림

--ppt 57 그룹 by 절
--job을 그룹으로 직업별 각 인원수를 구해보자
select job 직업, count(*) 인원수 from emp Group by job order by 직업;--컬럼명으로 순서정하기
select job 직업, count(*) 인원수 from emp Group by job order by 1;--칼럼번호로 순서정하기

--위의 결과의 인원수의 오름차순 
select job 직업, count(*) 인원수 from emp Group by job order by count(*);


--직업별 인원수와 최고연봉, 최저연봉,평균연봉을 구해보시오
select job 직업 ,count(*) 인원수 ,max(sal) 최고연봉 ,min(sal) 최저연봉 ,ceil(avg(sal)) 평균연봉 from emp group by job;

--Having은 group절에서 그룹함수를 이용해서 조건을 나타낼경우(원래는 where을 쓰지만)
--직업별 인원수와 최고연봉을 구하는데 직업별 인원수가 3명 이상인 경우만 조회
select job, count(*), max(sal) from emp group by job having count(job)>=3;

--오라클에서는 현재날짜를 구할때 sysdate, mysql now()를 많이 씀
select sysdate from dual; -- 현재 콘솔에 현재 날짜 출력
--30일 뒤
select sysdate+30 from dual;

--날짜타입을 문자열로 변환 To_char 
select To_char(sysdate, 'yyyy') from dual;
select To_char(sysdate, 'year') from dual; -- 잘 안씀

select to_char(sysdate, 'MM') from dual;

--기호를 많이 쓰는데 다양한 기호로 날짜를 출력해보자
select to_char(sysdate, 'YYYY-MM-DD')from dual;
select to_char(sysdate, 'YYYY-MM-DD AM HH:MI')from dual;
select to_char(sysdate, 'YYYY-MM-DD HH24:MI')from dual;

--emp에서 hiredate(날짜타입)을 이용해서 출력해보자
select ename, to_char(hiredate, 'YYYY_MM-DD') hiredate from emp;

--고용년이 1987 사람 출력
select ename, to_char(hiredate, 'YYYY_MM-DD') hiredate from emp where to_char(hiredate, 'YYYY')=1987;
--고용월이 5월인 사람 출력
select ename, to_char(hiredate, 'YYYY_MM-DD') hiredate from emp where to_char(hiredate, 'mm')=05;


--subquery : select문 안에 또 select 문이 있는 경우
--scott의 연봉과 같은 연봉을 가진 사람을 구하시오
select ename, sal from emp where sal=(select sal from emp where ename='SCOTT');
--평균연봉보다 많이 받는 사람의 정보를 출력하시오
select ename, sal from emp where sal>=(select avg(sal) from emp);


--0403연습문제
--ename이 'A'나 'S'로 시작하는 사람 조회
select ename, sal, comm from emp where ename like 'A%' or ename like 'S%';

--comm이 null인사람
select ename, comm from emp where comm is not null;

--mgr이 7698, 7566, 7782인 사람 조회 (IN)
select ename, job, sal from emp where mgr in(7698, 7566,7782);

--sal이 2500 3000 사이 조회 and
select ename, job, sal from emp where sal>=2500 and sal<=3000;

--sal이 2500부터 3000 between
select ename, job, sal from emp where sal between 2500 and 3000;

--서브쿼리문제
--ALLEN의 직업과 같은 사람의 직업 조회
select ename, job, sal from emp where job=(select job from emp where ename='ALLEN');

--scott의 mgr과 같은 값을 가진 사람 조회
select ename, job, sal, mgr from emp where mgr=(select mgr from emp where ename='SCOTT');

--job을 중복처리해서 한번씩만 출력하시오
select distinct job from emp;